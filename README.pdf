%PDF-1.3
1 0 obj
<< /Type /Catalog
/Outlines 2 0 R
/Pages 3 0 R >>
endobj
2 0 obj
<< /Type /Outlines /Count 0 >>
endobj
3 0 obj
<< /Type /Pages
/Kids [6 0 R
13 0 R
]
/Count 2
/Resources <<
/ProcSet 4 0 R
/Font << 
/F1 8 0 R
/F2 9 0 R
/F3 10 0 R
/F4 11 0 R
/F5 12 0 R
>>
>>
/MediaBox [0.000 0.000 595.280 841.890]
 >>
endobj
4 0 obj
[/PDF /Text ]
endobj
5 0 obj
<<
/Creator (DOMPDF)
/CreationDate (D:20190303232414+00'00')
/ModDate (D:20190303232414+00'00')
>>
endobj
6 0 obj
<< /Type /Page
/Parent 3 0 R
/Contents 7 0 R
>>
endobj
7 0 obj
<<
/Length 5964 >>
stream

0.000 0.000 0.000 rg
BT 34.016 768.985 Td /F1 24.0 Tf  [(Mini_MIPS)] TJ ET
BT 34.016 730.095 Td /F1 18.0 Tf  [(Usage)] TJ ET
BT 34.016 699.473 Td /F2 12.0 Tf  [(The project is made to be compiled with GNU make, as follows:)] TJ ET
BT 34.016 674.662 Td /F3 12.0 Tf  [(make)] TJ ET
BT 34.016 648.767 Td /F2 12.0 Tf  [(This will generate the executable in the ./bin folder. You can also remove the object files and the executable )] TJ ET
BT 34.016 634.511 Td /F2 12.0 Tf  [(with)] TJ ET
BT 34.016 609.700 Td /F3 12.0 Tf  [(make clean)] TJ ET
BT 34.016 583.805 Td /F2 12.0 Tf  [(You can use Mini_MIPS as an Instruction Simulator but it can also encode asm into hex files or decode hex )] TJ ET
BT 34.016 569.549 Td /F2 12.0 Tf  [(to asm. The following commands are the most useful but you can see all the uses of Mini_MIPS with the --)] TJ ET
BT 34.016 555.293 Td /F2 12.0 Tf  [(help command)] TJ ET
BT 34.016 530.482 Td /F3 12.0 Tf  [(./bin/Mini_MIPS [options] <input folders>)] TJ ET
BT 34.016 504.587 Td /F2 12.0 Tf  [(with for example:)] TJ ET
BT 34.016 479.775 Td /F3 12.0 Tf  [(./bin/Mini_MIPS --run    test_file.hex   #launches the simulation of the .hex file)] TJ ET
BT 34.016 467.325 Td /F3 12.0 Tf  [(./bin/Mini_MIPS --encode test_file.asm   #launches asm file encoding)] TJ ET
BT 34.016 454.875 Td /F3 12.0 Tf  [(./bin/Mini_MIPS --decode test_file.hex   #launches asm file decoding)] TJ ET
BT 34.016 442.425 Td /F3 12.0 Tf  [(./bin/Mini_MIPS --step                   #triggers step mode   ***)] TJ ET
BT 34.016 429.974 Td /F3 12.0 Tf  [(./bin/Mini_MIPS --load   test_file.data  #loads data in memory ***)] TJ ET
BT 34.016 404.080 Td /F2 12.0 Tf  [(Commands marked with *** are not fully functional)] TJ ET
BT 34.016 377.824 Td /F4 12.0 Tf  [(The file )] TJ ET
BT 73.352 377.824 Td /F5 12.0 Tf  [(./tests/encode_test_results/test_syracuse_result.hex)] TJ ET
BT 447.752 377.824 Td /F4 12.0 Tf  [( is the go-to test file)] TJ ET
BT 34.016 351.568 Td /F2 12.0 Tf  [(You can use the following command to test the vm:)] TJ ET
BT 34.016 326.756 Td /F3 12.0 Tf  [(./bin/Mini_MIPS -r ./tests/encode_test_results/test_syracuse_result.hex)] TJ ET
BT 34.016 300.861 Td /F2 12.0 Tf  [(Note that the step mode is enabled by default and should be changed manually by modifying the step value )] TJ ET
BT 34.016 286.605 Td /F2 12.0 Tf  [(to 0 in src/main.c as the command does not currently work.)] TJ ET
BT 34.016 251.707 Td /F1 18.0 Tf  [(Functionalities)] TJ ET
BT 34.016 219.146 Td /F1 14.0 Tf  [(Assembler)] TJ ET
0.000 0.000 0.000 RG
57.816 195.511 m 
57.816 196.060 57.589 196.607 57.201 196.995 c
56.812 197.384 56.266 197.611 55.716 197.611 c
55.166 197.611 54.620 197.384 54.231 196.995 c
53.842 196.607 53.616 196.060 53.616 195.511 c
53.616 194.961 53.842 194.414 54.231 194.026 c
54.620 193.637 55.166 193.411 55.716 193.411 c
56.266 193.411 56.812 193.637 57.201 194.026 c
57.589 194.414 57.816 194.961 57.816 195.511 c f
BT 64.016 192.406 Td /F2 12.0 Tf  [(ASM file conversion with solid blank trimming)] TJ ET
57.816 181.255 m 
57.816 181.804 57.589 182.351 57.201 182.739 c
56.812 183.128 56.266 183.355 55.716 183.355 c
55.166 183.355 54.620 183.128 54.231 182.739 c
53.842 182.351 53.616 181.804 53.616 181.255 c
53.616 180.705 53.842 180.158 54.231 179.770 c
54.620 179.381 55.166 179.155 55.716 179.155 c
56.266 179.155 56.812 179.381 57.201 179.770 c
57.589 180.158 57.816 180.705 57.816 181.255 c f
BT 64.016 178.150 Td /F2 12.0 Tf  [(18 ISS instructions understood)] TJ ET
57.816 166.999 m 
57.816 167.548 57.589 168.095 57.201 168.483 c
56.812 168.872 56.266 169.099 55.716 169.099 c
55.166 169.099 54.620 168.872 54.231 168.483 c
53.842 168.095 53.616 167.548 53.616 166.999 c
53.616 166.449 53.842 165.902 54.231 165.514 c
54.620 165.125 55.166 164.899 55.716 164.899 c
56.266 164.899 56.812 165.125 57.201 165.514 c
57.589 165.902 57.816 166.449 57.816 166.999 c f
BT 64.016 163.894 Td /F2 12.0 Tf  [(Label detection and encoding)] TJ ET
BT 34.016 135.699 Td /F1 14.0 Tf  [(Virtual Machine)] TJ ET
57.816 112.063 m 
57.816 112.613 57.589 113.159 57.201 113.548 c
56.812 113.937 56.266 114.163 55.716 114.163 c
55.166 114.163 54.620 113.937 54.231 113.548 c
53.842 113.159 53.616 112.613 53.616 112.063 c
53.616 111.513 53.842 110.967 54.231 110.578 c
54.620 110.189 55.166 109.963 55.716 109.963 c
56.266 109.963 56.812 110.189 57.201 110.578 c
57.589 110.967 57.816 111.513 57.816 112.063 c f
BT 64.016 108.958 Td /F2 12.0 Tf  [(Pile creation with hexadecimal instructions)] TJ ET
57.816 97.807 m 
57.816 98.357 57.589 98.903 57.201 99.292 c
56.812 99.681 56.266 99.907 55.716 99.907 c
55.166 99.907 54.620 99.681 54.231 99.292 c
53.842 98.903 53.616 98.357 53.616 97.807 c
53.616 97.257 53.842 96.711 54.231 96.322 c
54.620 95.933 55.166 95.707 55.716 95.707 c
56.266 95.707 56.812 95.933 57.201 96.322 c
57.589 96.711 57.816 97.257 57.816 97.807 c f
BT 64.016 94.702 Td /F2 12.0 Tf  [(ISS instructions execution)] TJ ET
57.816 83.551 m 
57.816 84.101 57.589 84.647 57.201 85.036 c
56.812 85.425 56.266 85.651 55.716 85.651 c
55.166 85.651 54.620 85.425 54.231 85.036 c
53.842 84.647 53.616 84.101 53.616 83.551 c
53.616 83.001 53.842 82.455 54.231 82.066 c
54.620 81.677 55.166 81.451 55.716 81.451 c
56.266 81.451 56.812 81.677 57.201 82.066 c
57.589 82.455 57.816 83.001 57.816 83.551 c f
BT 64.016 80.446 Td /F2 12.0 Tf  [(Solid command line handling)] TJ ET
57.816 69.295 m 
57.816 69.845 57.589 70.391 57.201 70.780 c
56.812 71.169 56.266 71.395 55.716 71.395 c
55.166 71.395 54.620 71.169 54.231 70.780 c
53.842 70.391 53.616 69.845 53.616 69.295 c
53.616 68.745 53.842 68.199 54.231 67.810 c
54.620 67.421 55.166 67.195 55.716 67.195 c
56.266 67.195 56.812 67.421 57.201 67.810 c
57.589 68.199 57.816 68.745 57.816 69.295 c f
BT 64.016 66.190 Td /F2 12.0 Tf  [(Step by step execution with terminal-based GUI \(Should be triggered manually by giving step in )] TJ ET
BT 64.016 51.934 Td /F2 12.0 Tf  [(src/main.c the value 1\))] TJ ET
endstream
endobj
8 0 obj
<< /Type /Font
/Subtype /Type1
/Name /F1
/BaseFont /Times-Bold
/Encoding /WinAnsiEncoding
>>
endobj
9 0 obj
<< /Type /Font
/Subtype /Type1
/Name /F2
/BaseFont /Times-Roman
/Encoding /WinAnsiEncoding
>>
endobj
10 0 obj
<< /Type /Font
/Subtype /Type1
/Name /F3
/BaseFont /Courier
/Encoding /WinAnsiEncoding
>>
endobj
11 0 obj
<< /Type /Font
/Subtype /Type1
/Name /F4
/BaseFont /Times-Italic
/Encoding /WinAnsiEncoding
>>
endobj
12 0 obj
<< /Type /Font
/Subtype /Type1
/Name /F5
/BaseFont /Courier-Oblique
/Encoding /WinAnsiEncoding
>>
endobj
13 0 obj
<< /Type /Page
/Parent 3 0 R
/Contents 14 0 R
>>
endobj
14 0 obj
<<
/Length 4525 >>
stream

0.000 0.000 0.000 rg
0.000 0.000 0.000 RG
BT 34.016 780.491 Td /F1 14.0 Tf  [(GUI)] TJ ET
57.816 758.895 m 
57.816 759.445 57.589 759.991 57.201 760.380 c
56.812 760.768 56.266 760.995 55.716 760.995 c
55.166 760.995 54.620 760.768 54.231 760.380 c
53.842 759.991 53.616 759.445 53.616 758.895 c
53.616 758.345 53.842 757.799 54.231 757.410 c
54.620 757.021 55.166 756.795 55.716 756.795 c
56.266 756.795 56.812 757.021 57.201 757.410 c
57.589 757.799 57.816 758.345 57.816 758.895 c f
BT 64.016 755.790 Td /F2 12.0 Tf  [(Step mode with colors for the last used registory \(for binary commands\))] TJ ET
57.816 744.639 m 
57.816 745.189 57.589 745.735 57.201 746.124 c
56.812 746.512 56.266 746.739 55.716 746.739 c
55.166 746.739 54.620 746.512 54.231 746.124 c
53.842 745.735 53.616 745.189 53.616 744.639 c
53.616 744.089 53.842 743.543 54.231 743.154 c
54.620 742.765 55.166 742.539 55.716 742.539 c
56.266 742.539 56.812 742.765 57.201 743.154 c
57.589 743.543 57.816 744.089 57.816 744.639 c f
BT 64.016 741.534 Td /F2 12.0 Tf  [(Last processed instruction)] TJ ET
BT 34.016 713.339 Td /F1 14.0 Tf  [(Cache)] TJ ET
57.816 689.703 m 
57.816 690.253 57.589 690.799 57.201 691.188 c
56.812 691.577 56.266 691.803 55.716 691.803 c
55.166 691.803 54.620 691.577 54.231 691.188 c
53.842 690.799 53.616 690.253 53.616 689.703 c
53.616 689.153 53.842 688.607 54.231 688.218 c
54.620 687.830 55.166 687.603 55.716 687.603 c
56.266 687.603 56.812 687.830 57.201 688.218 c
57.589 688.607 57.816 689.153 57.816 689.703 c f
BT 64.016 686.598 Td /F2 12.0 Tf  [(Basic implementation of an 8-lines cache based on a 36-bytes memory)] TJ ET
57.816 675.447 m 
57.816 675.997 57.589 676.543 57.201 676.932 c
56.812 677.321 56.266 677.547 55.716 677.547 c
55.166 677.547 54.620 677.321 54.231 676.932 c
53.842 676.543 53.616 675.997 53.616 675.447 c
53.616 674.897 53.842 674.351 54.231 673.962 c
54.620 673.574 55.166 673.347 55.716 673.347 c
56.266 673.347 56.812 673.574 57.201 673.962 c
57.589 674.351 57.816 674.897 57.816 675.447 c f
BT 64.016 672.342 Td /F2 12.0 Tf  [(Writethrough)] TJ ET
57.816 661.191 m 
57.816 661.741 57.589 662.287 57.201 662.676 c
56.812 663.065 56.266 663.291 55.716 663.291 c
55.166 663.291 54.620 663.065 54.231 662.676 c
53.842 662.287 53.616 661.741 53.616 661.191 c
53.616 660.641 53.842 660.095 54.231 659.706 c
54.620 659.318 55.166 659.091 55.716 659.091 c
56.266 659.091 56.812 659.318 57.201 659.706 c
57.589 660.095 57.816 660.641 57.816 661.191 c f
BT 64.016 658.086 Td /F2 12.0 Tf  [(Encoding and decoding of adresses and cache lines)] TJ ET
BT 34.016 629.892 Td /F1 14.0 Tf  [(To-do)] TJ ET
57.816 606.256 m 
57.816 606.805 57.589 607.352 57.201 607.741 c
56.812 608.129 56.266 608.356 55.716 608.356 c
55.166 608.356 54.620 608.129 54.231 607.741 c
53.842 607.352 53.616 606.805 53.616 606.256 c
53.616 605.706 53.842 605.160 54.231 604.771 c
54.620 604.382 55.166 604.156 55.716 604.156 c
56.266 604.156 56.812 604.382 57.201 604.771 c
57.589 605.160 57.816 605.706 57.816 606.256 c f
BT 64.016 603.151 Td /F2 12.0 Tf  [(CACHE: Functional cache)] TJ ET
57.816 592.000 m 
57.816 592.549 57.589 593.096 57.201 593.485 c
56.812 593.873 56.266 594.100 55.716 594.100 c
55.166 594.100 54.620 593.873 54.231 593.485 c
53.842 593.096 53.616 592.549 53.616 592.000 c
53.616 591.450 53.842 590.904 54.231 590.515 c
54.620 590.126 55.166 589.900 55.716 589.900 c
56.266 589.900 56.812 590.126 57.201 590.515 c
57.589 590.904 57.816 591.450 57.816 592.000 c f
BT 64.016 588.895 Td /F2 12.0 Tf  [(VM: More complete performance tests)] TJ ET
57.816 577.744 m 
57.816 578.293 57.589 578.840 57.201 579.229 c
56.812 579.617 56.266 579.844 55.716 579.844 c
55.166 579.844 54.620 579.617 54.231 579.229 c
53.842 578.840 53.616 578.293 53.616 577.744 c
53.616 577.194 53.842 576.648 54.231 576.259 c
54.620 575.870 55.166 575.644 55.716 575.644 c
56.266 575.644 56.812 575.870 57.201 576.259 c
57.589 576.648 57.816 577.194 57.816 577.744 c f
BT 64.016 574.639 Td /F2 12.0 Tf  [(VM: Negative numbers handling)] TJ ET
57.816 563.488 m 
57.816 564.037 57.589 564.584 57.201 564.973 c
56.812 565.361 56.266 565.588 55.716 565.588 c
55.166 565.588 54.620 565.361 54.231 564.973 c
53.842 564.584 53.616 564.037 53.616 563.488 c
53.616 562.938 53.842 562.392 54.231 562.003 c
54.620 561.614 55.166 561.388 55.716 561.388 c
56.266 561.388 56.812 561.614 57.201 562.003 c
57.589 562.392 57.816 562.938 57.816 563.488 c f
BT 64.016 560.383 Td /F2 12.0 Tf  [(GUI: Instructions and data should be visible as well)] TJ ET
endstream
endobj
xref
0 15
0000000000 65535 f 
0000000009 00000 n 
0000000074 00000 n 
0000000120 00000 n 
0000000324 00000 n 
0000000353 00000 n 
0000000467 00000 n 
0000000530 00000 n 
0000006546 00000 n 
0000006654 00000 n 
0000006763 00000 n 
0000006869 00000 n 
0000006980 00000 n 
0000007094 00000 n 
0000007159 00000 n 
trailer
<<
/Size 15
/Root 1 0 R
/Info 5 0 R
>>
startxref
11737
%%EOF
